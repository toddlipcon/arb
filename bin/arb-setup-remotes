#!/usr/bin/perl

use strict;
use warnings;
use FindBin;
use lib "$FindBin::RealBin/../perllib/";

use Pod::Usage;
use Getopt::Long;

use ARB;

my $getopt = GetOptions(
    "help" => sub { pod2usage(-verbose => 2); }
) or pod2usage(-verbose => 1);

my $project = ARB::deduce_project();

die "Cannot deduce project" unless $project;

system("git remote add review " . ARB::get_review_repository());

chomp(my $cur_origin = `git-config remote.origin.url`);
my $want_origin = ARB::get_main_repository();

if ($cur_origin ne $want_origin) {

    print "Your 'origin' remote is currently set to:\n  $cur_origin\n";
    print "ARB expects it to be:\n  $want_origin\n";
    print "\n";
    print "Would you like to:\n";
    print "\t(1) Set 'origin' to $want_origin\n";
    print "\t(2) Make a new 'main' remote for ARB to use instead\n";
    print "\n";

    my $choice = undef;
    while ((not defined $choice) || ($choice !~ /^[12]$/)) {
        local $| = 1;
        print "How would you like to proceed? [1]:";

        chomp($choice = <STDIN>);
        $choice = 1 if ($choice eq '')
    }

    if ($choice == 1) { # change "origin branch"
        system("git config remote.origin.url '$want_origin'");
        print "Set origin url to $want_origin\n";
        chomp($cur_origin = `git-config remote.origin.url`);

        die "Set unsuccessful" if $cur_origin ne $want_origin;

    } else {
        system("git remote add main '$want_origin'");
    }
}

# Don't use "else" for the below since they could have made this condition
# come true in the block above
if ($cur_origin eq $want_origin) {
    # Check if they have a redundant old-style "main" remote to remove
    chomp(my $cur_main = `git-config remote.main.url`);
    if ($? == 0) { # config key found

        print "You seem to have a redundant 'main' remote with url:\n  $cur_main\n";
        my $choice = undef;
        while ((not defined $choice) || ($choice !~ /^[yn]$/i)) {
            local $| = 1;
            print "Would you like to remove it? (Y/n):";

            chomp($choice = <STDIN>);
            $choice = 'Y' if ($choice eq '')
        }
        if (uc $choice eq 'Y') {
            print "Removing remote 'main'\n";
            system("git-config --remove-section remote.main");
        }

    }
}
print "Remotes set up\n";

__END__

=pod

=head1 NAME

arb-setup-remotes - sets up remote branches for the "main" and "review" repositories

=head1 SYNOPSIS

B<arb-setup-remotes>

=head1 DESCRIPTION

This command will use any of {main, review, origin} to determine the ARB project you're
working on in this git repository, and then set up git remotes to "main" and "review"
if they don't already exist.

=head1 AUTHOR

Todd Lipcon, E<lt>todd@amiestreet.comE<gt>

=cut
